name: Rust

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
  
    strategy:
      matrix:
        system: [darwin, windows]
        arch: [i686, x86_64]
        include:
          - system: windows
            os: windows-latest
            vendor: pc
            abi: -msvc
            rustflags: -C target-feature=+crt-static
            archive_type: zip
            archive_extension: .zip
          - system: darwin
            os: macos-latest
            vendor: apple
            abi: ""
            rustflags: -C target-feature=+crt-static
            archive_type: tar
            archive_extension: .tar.gz
        exclude:
          - system: darwin
            arch: i686

    runs-on: ${{ matrix.os }}
    
    env:
      CARGO_BUILD_TARGET: ${{matrix.arch}}-${{matrix.vendor}}-${{matrix.system}}${{matrix.abi}}
      RUSTFLAGS: ${{matrix.rustflags}}

    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: cargo build --release --verbose
    - name: Tests
      run: cargo test --verbose
    - name: Release Prepare
      id: release
      run: |
        echo "::set-output name=artifact_file::${{matrix.arch}}-${{matrix.vendor}}-${{matrix.system}}${{matrix.abi}}${{matrix.archive_extension}}"
        echo "::set-output name=artifact_dir::target/${{matrix.arch}}-${{matrix.vendor}}-${{matrix.system}}${{matrix.abi}}"
    - name: Release Archive
      uses: thedoctor0/zip-release@master
      with:
        type: ${{matrix.archive_type}}
        filename: ${{steps.release.outputs.artifact_file}}
        directory: ${{steps.release.outputs.artifact_dir}}
        path: 'scanner-cmd*'
    - name: Release Publish
      uses: ncipollo/release-action@v1
      with:
        artifacts: ${{steps.release.outputs.artifact_dir}}/${{steps.release.outputs.artifact_file}}
        allowUpdates: true
        generateReleaseNotes: true
        replacesArtifacts: true
        removeArtifacts: true
        prerelease: false
        draft: false
        token: ${{ secrets.RELEASE_TOKEN }}
